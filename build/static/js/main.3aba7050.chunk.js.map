{"version":3,"sources":["axios.js","App.js","index.js"],"names":["instance","axios","create","baseURL","App","input","setInput","useState","translate","setTranslate","loading","setLoading","base","setBase","target","setTarget","idioms","setIdioms","className","Box","sx","minWidth","FormControl","fullWidth","InputLabel","id","Select","labelId","value","label","onChange","event","MenuItem","TextareaAutosize","rowsMax","placeholder","Button","variant","color","onClick","async","post","words","idiom","then","response","data","translations","translation","sendData","startIcon","CircularProgress","size","rootElement","document","getElementById","render"],"mappings":"yIAMeA,M,OAJEC,EAAMC,OAAO,CAC1BC,QAAS,yC,iHCaE,SAASC,IACtB,MAAOC,EAAOC,GAAYC,mBAAS,KAC5BC,EAAWC,GAAgBF,mBAAS,KACpCG,EAASC,GAAcJ,oBAAS,IAEhCK,EAAMC,GAAWN,mBAAS,KAC1BO,EAAQC,GAAaR,mBAAS,KAC9BS,EAAQC,GAAaV,mBAAS,IAwBrC,OACE,sBAAKW,UAAU,MAAf,UACE,+CAEA,sBAAKA,UAAU,YAAf,UACE,sBAAKA,UAAU,OAAf,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,KAArB,SACE,eAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,EAAA,EAAD,CAAYC,GAAG,aAAf,mBACA,eAACC,EAAA,EAAD,CACEC,QAAQ,oBACRF,GAAG,cACHG,MAAOhB,EACPiB,MAAM,QACNC,SAAWC,IACTlB,EAAQkB,EAAMjB,OAAOc,QANzB,UASE,cAACI,EAAA,EAAD,CAAUJ,MAAO,KAAjB,wBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,KAAjB,oBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,KAAjB,6BAIN,cAACK,EAAA,EAAD,CACEf,UAAU,OACVgB,QAAS,EACT,aAAW,iBACXC,YAAY,kBACZP,MAAOvB,EACPyB,SAAWC,GAAUzB,EAASyB,EAAMjB,OAAOc,YAG/C,sBAAKV,UAAU,UAAf,UACE,cAACkB,EAAA,EAAD,CACElB,UAAU,SACVmB,QAAQ,YACRC,MAAM,YACNC,QA1CY,KACpB3B,GAAQE,EAASL,EAAaJ,IAAUY,EAAUL,EAAO,IAAME,GAnBhD0B,WACf7B,GAAW,GACXV,EACGwC,KAAK,oBAAqB,CACzBC,MAAOrC,EACPsC,MAAO3B,IAER4B,MAAMC,IACLlC,GAAW,GACXF,EAAaoC,EAASC,KAAKC,aAAa,GAAGC,iBAUyBC,CAASjC,KA0CzEkC,UAAW,cAAC,IAAD,IALb,kBAUCxC,GAAW,cAACyC,EAAA,EAAD,CAAkBjC,UAAU,UAAUkC,KAAM,KAExD,cAAChB,EAAA,EAAD,CACElB,UAAU,SACVmB,QAAQ,YACRC,MAAM,UACNC,QA3DQ,KAChBjC,EAAS,IACTG,EAAa,KA0DLyC,UAAW,cAAC,IAAD,IALb,sBAUF,sBAAKhC,UAAU,OAAf,UACE,cAACC,EAAA,EAAD,CAAKC,GAAI,CAAEC,SAAU,KAArB,SACE,eAACC,EAAA,EAAD,CAAaC,WAAS,EAAtB,UACE,cAACC,EAAA,EAAD,CAAYC,GAAG,QAAf,mBACA,eAACC,EAAA,EAAD,CACEC,QAAQ,eACRF,GAAG,SACHG,MAAOd,EACPe,MAAM,QACNC,SAAWC,IACThB,EAAUgB,EAAMjB,OAAOc,QAN3B,UASE,cAACI,EAAA,EAAD,CAAUJ,MAAO,KAAjB,wBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,KAAjB,oBACA,cAACI,EAAA,EAAD,CAAUJ,MAAO,KAAjB,6BAIN,cAACK,EAAA,EAAD,CACEC,QAAS,EACThB,UAAU,OACV,aAAW,iBACXiB,YAAY,SACZP,MAAOpB,EACPsB,SAAWC,GAAUtB,EAAasB,EAAMjB,OAAOc,eAKrD,0BCjIN,MAAMyB,EAAcC,SAASC,eAAe,QAC5CC,iBAAO,cAACpD,EAAD,IAASiD,I","file":"static/js/main.3aba7050.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://ibm-translate.herokuapp.com/'\r\n})\r\n\r\nexport default instance\r\n","import \"./styles.css\";\nimport { useState } from \"react\";\nimport axios from \"./axios\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport {\n  Box,\n  Button,\n  FormControl,\n  InputLabel,\n  MenuItem,\n  Select,\n  TextareaAutosize,\n} from \"@material-ui/core\";\nimport SendIcon from \"@material-ui/icons/Send\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nexport default function App() {\n  const [input, setInput] = useState(\"\");\n  const [translate, setTranslate] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  const [base, setBase] = useState(\"\");\n  const [target, setTarget] = useState(\"\");\n  const [idioms, setIdioms] = useState(\"\");\n\n  const sendData = async (idioms) => {\n    setLoading(true);\n    axios\n      .post(\"/translate/result\", {\n        words: input,\n        idiom: idioms,\n      })\n      .then((response) => {\n        setLoading(false);\n        setTranslate(response.data.translations[0].translation);\n      });\n  };\n\n  const cleanData = () => {\n    setInput(\"\");\n    setTranslate(\"\");\n  };\n\n  const detectedIdiom = () => {\n    base == target ? setTranslate(input) : (setIdioms(base + \"-\" + target), sendData(idioms));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>IBM Translate</h1>\n\n      <div className=\"container\">\n        <div className=\"card\">\n          <Box sx={{ minWidth: 120 }}>\n            <FormControl fullWidth>\n              <InputLabel id=\"label-tras\">Idiom</InputLabel>\n              <Select\n                labelId=\"select-label-tras\"\n                id=\"select-tras\"\n                value={base}\n                label=\"Idiom\"\n                onChange={(event) => {\n                  setBase(event.target.value);\n                }}\n              >\n                <MenuItem value={\"es\"}>Español</MenuItem>\n                <MenuItem value={\"en\"}>Ingles</MenuItem>\n                <MenuItem value={\"fr\"}>Frances</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n          <TextareaAutosize\n            className=\"area\"\n            rowsMax={8}\n            aria-label=\"maximum height\"\n            placeholder=\"Type a text ...\"\n            value={input}\n            onChange={(event) => setInput(event.target.value)}\n          />\n        </div>\n        <div className=\"command\">\n          <Button\n            className=\"button\"\n            variant=\"contained\"\n            color=\"secondary\"\n            onClick={detectedIdiom}\n            startIcon={<SendIcon />}\n          >\n            Send\n          </Button>\n\n          {loading && <CircularProgress className=\"spinner\" size={68} />}\n\n          <Button\n            className=\"button\"\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={cleanData}\n            startIcon={<DeleteIcon />}\n          >\n            Clean\n          </Button>\n        </div>\n        <div className=\"card\">\n          <Box sx={{ minWidth: 120 }}>\n            <FormControl fullWidth>\n              <InputLabel id=\"label\">Idiom</InputLabel>\n              <Select\n                labelId=\"select-label\"\n                id=\"select\"\n                value={target}\n                label=\"Idiom\"\n                onChange={(event) => {\n                  setTarget(event.target.value);\n                }}\n              >\n                <MenuItem value={\"es\"}>Español</MenuItem>\n                <MenuItem value={\"en\"}>Ingles</MenuItem>\n                <MenuItem value={\"fr\"}>Frances</MenuItem>\n              </Select>\n            </FormControl>\n          </Box>\n          <TextareaAutosize\n            rowsMax={8}\n            className=\"area\"\n            aria-label=\"maximum height\"\n            placeholder=\"Result\"\n            value={translate}\n            onChange={(event) => setTranslate(event.target.value)}\n          />\n        </div>\n      </div>\n\n      <br />\n    </div>\n  );\n}\n","import { render } from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nrender(<App />, rootElement);\n"],"sourceRoot":""}